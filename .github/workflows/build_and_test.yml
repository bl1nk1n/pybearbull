name: Build and Test

on: 
  push:
    paths-ignore:
      - 'docs/**'
      - 'LICENSE.txt'
      - 'README.md'
      - '.gitlab-ci.yml'
      - 'bitbucket-pipelines.yml'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'LICENSE.txt'
      - 'README.md'
      - '.gitlab-ci.yml'
      - 'bitbucket-pipelines.yml'

jobs:
  build:
    #name: Building the Project and Installing Dependencies

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
       os: [ubuntu-latest] #macos-latest, windows-latest
       python-version: [3.8] #2.7, 3.6, 3.7, pypy2, pypy3
       architecture: [x64] #x86
       #   exclude:
       #  - os: macos-latest
       #    python-version: 3.6

    steps:
    - uses: actions/checkout@v2
    - name: Set Up Python ${{ matrix.python-version }} on ${{ matrix.os }}-${{ matrix.architecture }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Display Python Version
      run: python -c "import sys; print(sys.version)"

    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip # This path is specific to Ubuntu
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install Testing Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

#  test:
#    needs: build

#    runs-on: ubuntu-latest
    #strategy:
    # matrix:
    #   os: [ubuntu-latest, macos-latest, windows-latest]
    #   python-version: [2.7, 3.6, 3.7, 3.8, pypy2, pypy3]
    #   architecture: [x86, x64]
    #   exclude:
    #     - os: macos-latest
    #       python-version: 3.6

#    steps:
    - name: Testing, Checking Code Coverage, and Linting with PyTest
      run: |
        pip install pytest
        pip install pytest-cov
        python -m pytest tests/ --cov=pybearbull/ --flakes
